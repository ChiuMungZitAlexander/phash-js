import { expect, test } from "vitest";

import { dct1d, dct2d, binarize } from "..";

test("dct1d should transform sequence correctly", () => {
  const input = [255, 255, 255, 0, 0, 0, 255, 255];
  const ouput = [
    450.780573006424, 70.83520470999927, 284.3814184169271, -125.05012325141178,
    -90.15611460128488, 24.874016057056437, -20.210365142091682,
    106.01237556857527,
  ];
  expect(dct1d(input)).toStrictEqual(ouput.map((n) => expect.closeTo(n, 4)));
});

test("dct1d should transform matrix correctly", () => {
  const input = [
    [52, 55, 61, 66, 70, 61, 64, 73],
    [63, 59, 55, 90, 109, 85, 69, 72],
    [62, 59, 68, 113, 144, 104, 66, 73],
    [63, 58, 71, 122, 154, 106, 70, 69],
    [67, 61, 68, 104, 126, 88, 68, 70],
    [79, 65, 60, 70, 77, 68, 58, 75],
    [85, 71, 64, 59, 55, 61, 65, 83],
    [87, 79, 69, 68, 65, 76, 78, 94],
  ];
  const output = [
    [
      608.6249999999999, -30.185717276808962, -61.19706195029583,
      27.239322496004643, 56.12500000000003, -20.095173772334757,
      -2.387647095294083, 0.46181544244910844,
    ],
    [
      4.465523701413815, -21.85743933225984, -60.75803811653402,
      10.253636818417826, 13.145110120476234, -7.087418007845213,
      -8.53543671296946, 4.876888496680383,
    ],
    [
      -46.83448474231257, 7.3705973534266995, 77.12938757875554,
      -24.561982249733358, -28.911688429320662, 9.933520952775094,
      5.416815472394502, -5.648950862137457,
    ],
    [
      -48.53496666553094, 12.06836094001921, 34.099767172715055,
      -14.759411080801927, -10.24060680175043, 6.2959674383730455,
      1.8311650530957355, 1.9459365148647705,
    ],
    [
      12.125000000000014, -6.553449928892059, -13.196120970971867,
      -3.951427727907843, -1.874999999999995, 1.7452844510267256,
      -2.7872282503369483, 3.1352823039767848,
    ],
    [
      -7.734743677599056, 2.9054613828905578, 2.3797957648755634,
      -5.939313935865545, -2.3777967067326102, 0.9413915961413951,
      4.3037133436227535, 1.8486910259091138,
    ],
    [
      -1.0306740134978156, 0.18306744355204185, 0.41681547239450456,
      -2.4155613745353857, -0.8777939199422975, -3.0193065522845233,
      4.120612421244484, -0.6619484539385744,
    ],
    [
      -0.16537560203597934, 0.141607122441836, -1.071536389510264,
      -4.1929120780447064, -1.1703140920062238, -0.09776107933754333,
      0.5012693916445945, 1.675458816920357,
    ],
  ];

  expect(dct2d(input)).toStrictEqual(
    output.map((_row) => _row.map((_n) => expect.closeTo(_n, 4)))
  );
});

test("binarize should transform matrix correctly", () => {
  const input = [
    [75, 42, 42, 32],
    [84, 67, 4, 76],
    [42, 45, 67, 13],
    [98, 38, 18, 8],
  ];
  const ouput = [
    [1, 0, 0, 0],
    [1, 1, 0, 1],
    [0, 0, 1, 0],
    [1, 0, 0, 0],
  ];
  expect(binarize(input)).toStrictEqual(ouput);
});
